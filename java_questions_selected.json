{
    "Id": 71063202,
    "PostTypeId": 1,
    "Title": "check valid date in java",
    "Body": "I tried to check a String input that is a valid date using the format dd/MM/yyyy like this:\nString input = Scanner.nextLine();\nDateTimeFormatter formater = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");\ntry{\n    LocaleDate.parse(input, formater);\n}\ncatch(Exception e)\n\nBut it can't check some rules below:\nLeap year, February 29 days.\n\nCommon year, February 28 days.\n\nMonth 1, 3, 5, 7, 8, 10, 12, max 31 days.\n\nMonth 4, 6, 9, 11, max 30 days.\n\nWhen I use input = \"30/02/2022\", it's legal.\nI use netbeans 8.2 and jdk 1.8. Do they support some methods for checking these rules?\n",
    "AcceptedAnswerId": 71063276,
    "AcceptedAnswer": "There are two things you need to change in your formatter:\n\nUse uuuu instead of yyyy. It's easy to try the latter, but y means \"year within ERA\". It doesn't know whether it's BC or AD. u means \"year\" including ERA information.\nThe default resolver style is SMART. Use .withResolverStyle(ResolverStyle.STRICT) to return a strict copy of the formatter.\n\n"
}
{
    "Id": 73911550,
    "PostTypeId": 1,
    "Title": "How can I reduce the time complexity from O(n^2) to O(n)",
    "Body": "I recently attended an interview and they asked me to solve the below problem by using O(n) time complexity. (Hackerranker)\nProblem:\nGiven an integer array and there will be l integer and r integer. Need to find the which are all the pair of elements sum will be equal and in between l and r value;\n\nExample:\nint[] array = {2,3,4,5}; int l=5, int r=7;\n\nOutput: 4\n\nInput properties:\n\nThe input is unsorted.\nThe input will have duplicate elements.\nThe input array is non-negative.\n\nThe below combination will return the sum which will be equal and in between l and r range value, where if the pair is less than l or greater than r it should be skipped. And pairs can't be duplicated:\narray[0] + array[1] = 5 -> counter++\narray[0] + array[2] = 6 -> counter++\narray[0] + array[3] = 7 -> counter++\narray[1] + array[2] = 7 -> counter++\narray[1] + array[3] = 8 -> greater than r, no counter increment\n\nI tried the below approach and it works fine but its time complexity is O(n^2):\n public static int sumPairs(int[] array,int l, int r)\n    {\n        int counter=0;\n        for(int i=0;i<array.length;i++)\n        {\n            for(int j=i+1;j<array.length;j++)\n            {\n                int sum = array[i]+array[j];\n                \n                if(sum=l)\n                {\n                    counter++;\n                }\n            }\n        }\n        \n        return counter;\n    }\n\nCan someone help me to find a way to optimize the above code to become O(n) time complexity?\n",
    "AcceptedAnswerId": 73922249,
    "AcceptedAnswer": "Here's my approach using a cumulative histogram instead of a sort. In c++, sorry.\nstatic int sumPairsLinear(int *pArray,int iArraySize, int l, int r)\n{\n    int iResult = 0;\n    // 1. Iterate the array and toss any entries larger than r\n    for (int i=0;i<iArraySize;)\n    {\n        if (pArray[i] > r)\n            pArray[i] = pArray[--iArraySize];\n        else\n            i++;\n    }\n    // 2. Allocate a zero initialised array of ints, of size `r+1`.\n    int *pHistogram = new int[r+1];\n    memset(pHistogram, 0, sizeof(int)*(r+1));\n    // 3. Fill the histogram\n    for (int i=0;i<iArraySize;i++)\n    {\n        pHistogram[pArray[i]]++;\n    }\n    // 4. Convert it to a cumulative histogram. \n    for (int i=1;i<=r;i++)\n    {\n        pHistogram[i] += pHistogram[i-1];\n    }\n    // 5. Iterate through the values again. Use the cumulative histogram to calculate the number of valid pairs.\n    for (int i=0;i<iArraySize;i++)\n    {\n        int iVal = pArray[i];\n        int iIndex = l-iVal-1;\n        iResult += pHistogram[r-iVal] - ((iIndex >= 0) ? pHistogram[iIndex] : 0);\n        // Don't pair with self\n        iVal *= 2;\n        if (iVal <= r &&\n            iVal >= l)\n        {\n            iResult--;\n        }\n    }\n    // 6. Half iResult because we counted each pair twice.\n    iResult /= 2;\n\n    delete[] pHistogram;\n    return iResult;\n}\n\nHorrible performance if r is large but otherwise reasonable and still O(N).\n"
}
{
    "Id": 70995023,
    "PostTypeId": 1,
    "Title": "What's the difference between String.format() and str.formatted() in Java?",
    "Body": "I know that method String.format() is nearly the same as method System.out.printf() except it returns a String. But I could hardly find the introduction about method \"formatted\" which is defined as follows:\npublic String formatted(Object... args) {\n        return new Formatter().format(this, args).toString();\n}\n\nAnd I know the functions of two codes below are the same.\nString str1 = String.format(\"%s\", \"abab\");\nSystem.out.println(str1);\n\nString str2;\nstr2 = \"%s\".formatted(\"abab\");\nSystem.out.println(str2);\n\nTherefore I'm wandering what's the difference between them. Thank you!\n",
    "AcceptedAnswerId": 70997302,
    "AcceptedAnswer": "Make sure you use a good IDE so that you have easy access to browse into JDK source code. In Eclipse say, use F3 to open to any declaration. IntelliJ IDEA has similar feature.\nIf you view the source code for both methods, you can see these calls are identical except that variables this is interchanged with format when comparing the instance vs static method:\npublic String formatted(Object... args) {\n    return new Formatter().format(this, args).toString();\n}\npublic static String format(String format, Object... args) {\n    return new Formatter().format(format, args).toString();\n}\n\nSo as you've observed: String.format(str, args) is same as str.formatted(args)\n"
}
{
    "Id": 71363302,
    "PostTypeId": 1,
    "Title": "Java sorting list of array vs sorting list of list",
    "Body": "I have a list of points where each point is a tiny list of size 2. I want to sort the list of points in increasing order of x and if x values are equal, I break tie by sorting in decreasing order of y.\nI wrote a custom comparator to sort the points like this:\nCollections.sort(points, (a, b) -> {\n    if (a.get(0) != b.get(0)) {\n        return a.get(0) - b.get(0);\n    } return b.get(1) - a.get(1); \n});\n\nHere's the input before sorting:\n(2, 1000)\n(9, -1000)\n(3, 15)\n(9, -15)\n(5, 12)\n(12, -12)\n(5, 10)\n(10001, -10)\n(19, 8)\n(10001, -8)\n\nHere's the result produced after sorting with the above comparator:\n(2, 1000)\n(3, 15)\n(5, 12)\n(5, 10)\n(9, -15)\n(9, -1000)\n(12, -12)\n(19, 8)\n(10001, -10)\n(10001, -8)\n\nObservations:\n\nThe input is sorted in ascending order on x.\n(5, 12) was correctly put before (5, 10).\n(9, -15) was correctly put before (9, -1000).\nHowever, (10001, -10) was put before (10001, -8). Even though -8 is larger than -10.\n\nFeel like I am missing something trivial. I experimented with a few other ways of writing the comparator like using Integer.compare(a, b) or just a.compareTo(t), but got the same result.\nFinally, I changed the representation of point from List to int[] and wrote the same comparator again. See results below:\nCollections.sort(points, (a, b) -> {\n    if (a[0] != b[0])\n        return a[0] - b[0];\n    return b[1] - a[1];\n});\n\nInput before sorting:\n(2, 1000)\n(9, -1000)\n(3, 15)\n(9, -150\n(5, 12)\n(12, -12)\n(5, 10)\n(10001, -10)\n(19, 8)\n(10001, -8)\n\nAfter sorting:\n(2, 1000)\n(3, 15)\n(5, 12)\n(5, 10)\n(9, -15)\n(9, -1000)\n(12, -12)\n(19, 8)\n(10001, -8)\n(10001, -10)\n\nSo list of arrays is getting sorted correctly as (10001, -8) was correctly put before (10001, -10).\nI am not able to understand why changing the representation of point resolved the issue and hence this question. I can give more details on how I am creating the List of points if required.\n",
    "AcceptedAnswerId": 71363726,
    "AcceptedAnswer": "\nI am missing something trivial\n\nMethod equals() should be used for object comparison. Double equals == checks whether two references point to the same object in memory.\nIf you change the condition inside the comparator to !a.get(0).equals(b.get(0)) it will work correctly.\n\nHowever, (10001, -10) was put before (10001, -8). Even though -8 is larger than -10.\n\nThe reason for such behavior is that JVM caches all the instances of Integer (as well as Byte, Short and Long) in the range [-128; 127]. I.e. these instances are reused, the result of autoboxing of let's say int with a value of 12 will be always the same object.\nBecause small values in your example like 3, 5, 12 will be represented by a single object, they were compared with == without issues. But the result of comparison with == for two Integer instances with a value of 10001 will be false because in this case there will be two distinct objects in the heap.\nThe approach of caching frequently used objects is called the Flyweight design pattern. It's very rarely used in Java because this pattern can bring benefits when tons of identical objects are being created and destroyed. Only in such a case caching these objects will pay off with a significant performance improvement. As far as I know, it's used in game development.\nUse the power of objects\nPoint must be an object, not a list, as Code-Apprentice has pointed out in his answer. Use the power of objects and don't overuse collections. It brings several advantages:\n\nclass provides you a structure, it's easier to organize your code when you are thinking in terms of objects;\nbehavior declared inside a class is reusable and easier to test;\nwith classes, you can use the power of polymorphism.\n\nCaution: objects could be also misused, one of the possible indicators of that is when a class doesn't declare any behavior apart from getters and its data is being processed somehow in the code outside this class.\nAlthough the notion of point (as a geometrical object) isn't complicated, there are some useful options with regard to methods. For example, you could make instances of the Point class to be able to check to whether they are aligned horizontally or vertically, or whether two points are within a particular radius. And Point class can implement Comparable interface so that points will be able to compare themselves without a Comparator.\nSorting\nWith Java 8 method sort()\nwas added to the List interface. It expects an instance of Comparator, and if element of the list implement comparable, and you want them to be sorted according to the natural order null can be passed as an argument.\n\nIf the specified comparator is null then all elements in this list must implement the Comparable interface and the elements' natural ordering should be used.\n\nSo instead of using utility class Collections you can invoke method sort() directly on a list of points (assuming that Point implements Comparable):\npoints.sort(null); // the same as   points.sort(Comparator.naturalOrder()); \n\nAlso, you can create multiple custom comparators by utilizing default and static methods from the Comparator interface like comparingInt() and thenComparing().\n(for more information on how to build comparators with Java 8 methods take a look at this tutorial)\n"
}
{
    "Id": 71075781,
    "PostTypeId": 1,
    "Title": "How to add classpath dependencies in build.gradle project?",
    "Body": "After the Gradle update, every new project has this type of format in build.gradle (project:\"...\")\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\nplugins {\n    id 'com.android.application' version '7.1.0' apply false\n    id 'com.android.library' version '7.1.0' apply false\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\nNow how can I add classpath dependencies here?\n",
    "AcceptedAnswerId": 71272079,
    "AcceptedAnswer": "If you are adding firebase to your Android App it needs to look something like below.\n\nbuildscript {\n    repositories {\n        // Check that you have the following line (if not, add it):\n        google()  // Google's Maven repository\n\n    }\n    dependencies {\n\n        // Add this line\n        classpath 'com.google.gms:google-services:4.3.10'\n\n    }\n}\n\n\n\nplugins {\n    id 'com.android.application' version '7.1.2' apply false\n    id 'com.android.library' version '7.1.2' apply false\n}\n\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\n"
}
{
    "Id": 70938297,
    "PostTypeId": 1,
    "Title": "How to add classpath in new version of Android Studio",
    "Body": "I updated my android studio version to bumblebee version.\nNow I want add navigation component to my project.\nI want add classpath to gradle, but this file gradle has been changed and I don'y know how can I add this.\nI want add this        classpath(\"androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version\") to gradle files!\nMy project gradle file is :\n    plugins {\n    id 'com.android.application' version '7.1.0' apply false\n    id 'com.android.library' version '7.1.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\nHow can I add this classpath to application gradle ?!\n",
    "AcceptedAnswerId": 71410793,
    "AcceptedAnswer": "In the latest version in February 2022 doesn't need to add buildscript anymore just add the id in build.gradle for project. It will be like this in build.gradle for project:\nplugins {\n    id 'com.android.application' version '7.1.2' apply false\n    id 'com.android.library' version '7.1.2' apply false\n    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false\n\n    id 'androidx.navigation.safeargs' version '2.4.1' apply false\n    // classpath are changed, so no need to add classpath anymore just the id and the version\n}\n\nDon't forget add the id again in the build.gradle module,\nplugins {\n    id 'com.android.application'\n    id 'org.jetbrains.kotlin.android'\n    id 'androidx.navigation.safeargs'\n}\n\n"
}
{
    "Id": 70725347,
    "PostTypeId": 1,
    "Title": "The application \u201cEclipse\u201d can\u2019t be opened. (macOS Monterey)",
    "Body": "I downloaded Eclipse on my Mac for school, following these instructions:\n\nIn your browser, go to Eclipse Downloads. Do not use the Eclipse Installer. Instead follow these steps to download and install Eclipse.\nFind the Eclipse IDE for Java Developers package (make sure you do not pick the wrong package) and click on the appropriate download link for your operating system (Windows, Mac, or Linux) and architecture (32-bit or 64-bit). There are many other packages but this is the one that you'll need in this class.\nOnce the download has completed, locate the downloaded file. This file will be a compressed (i.e., a \".zip\", or \".tar.gz\") file. Uncompress this file into the directory of your choice. It doesn't really matter where you put the Eclipse installation folder as long as you know how to retrieve it. You can optionally create a shortcut of the Eclipse IDE executable file (\"eclipse.exe\" on Windows, or \"eclipse\" on Linux, or \"Eclipse\" on Mac OS X) found in the directory that is created. To start Eclipse you just double-click on the executable file or the shortcut\n\nI downloaded the Eclipse macOS x86_64 version, and moved it into my applications folder. I was able to open Eclipse, and everything works perfectly, and I can work if it's open; but after I close Eclipse and a couple hours go by, I get the following messages once I try to reopen it. \"Eclipse quit unexpectedly\" and \"The application \u201cEclipse\u201d can\u2019t be opened.\"\nI had the .dmg file in my downloads folder, which might have been the problem. I moved it into my applications folder with Eclipse, and that still doesn't work.\nI have tried to delete and redownload Eclipse multiple times, and nothing works.\ndo you have any suggestions on how I can fix this?\n",
    "AcceptedAnswerId": 71740449,
    "AcceptedAnswer": "Faced the same issue each time I'm restarting the Macbook pro M1, and a random Reddit thread provided me with a way to fix it. Open a terminal and run,\nsudo codesign --force --deep --sign - /Applications/Eclipse.app\n\nNot sure why this codesigning fixes the problem. But seems to be a bug in the eclipse itself. Hope this helps someone.\n"
}
{
    "Id": 71434304,
    "PostTypeId": 1,
    "Title": "Does Java Evaluate a Variable Declared as Final only Once?",
    "Body": "I'm writing a Java program that requires thousands of System.out.println() statements that will be printed hundreds of millions (or billions) of times throughout the lifecycle of the program for debugging purposes:\nif (GVar.runInDebugMode) System.out.println(\"Print debug message\");\n\nIn the real world, these statements can be deactivated in order to speed up a computational heavy calculation.\nIf I set:\npublic final static boolean runInDebugMode = false;\n\nDoes the compiler re-evaluate runInDebugMode each time it comes across a statement like: if (GVar.runInDebugMode) or since it was declared as final it will be evaluated once at the beginning of the program and won't put additional strain on the CPU? In other words, would I be better off commenting out all debug statements entirely once I deploy the app or is setting runInDebugMode  to false sufficient?\n",
    "AcceptedAnswerId": 71470775,
    "AcceptedAnswer": "When you declare a variable like\npublic final static boolean runInDebugMode = false;\n\nit\u2019s a compile-time constant.\n\nA constant variable is a final variable of primitive type or type String that is initialized with a constant expression (\u00a715.29).\n\nwhich means that\n\nA reference to a field that is a constant variable (\u00a74.12.4) must be resolved at compile time to the value V denoted by the constant variable's initializer.\nIf such a field is static, then no reference to the field should be present in the code in a binary file, including the class or interface which declared the field.\n\nIn other words, when you write if(runInDebugMode) anywhere and runInDebugMode is false at compile time, the behavior is as if you\u2019ve written if(false), as the value must be resolved at compile time and no reference to the field appears in the compiled class file.\nYour use case has been discussed specifically in \u00a714.22\n\nHowever, in order to allow the if statement to be used conveniently for \"conditional compilation\" purposes, the actual rules differ.\nAs an example, the following statement results in a compile-time error:\nwhile (false) { x=3; }\n\nbecause the statement x=3; is not reachable; but the superficially similar case:\nif (false) { x=3; }\n\ndoes not result in a compile-time error. An optimizing compiler may realize that the statement x=3; will never be executed and may choose to omit the code for that statement from the generated class file, but the statement x=3; is not regarded as \"unreachable\" in the technical sense specified here.\nThe rationale for this differing treatment is to allow programmers to define \"flag\" variables such as:\nstatic final boolean DEBUG = false;\n\nand then write code such as:\nif (DEBUG) { x=3; }\n\nThe idea is that it should be possible to change the value of DEBUG from false to true or from true to false and then compile the code correctly with no other changes to the program text.\nConditional compilation comes with a caveat. If a set of classes that use a \"flag\" variable - or more precisely, any static constant variable (\u00a74.12.4) - are compiled and conditional code is omitted, it does not suffice later to distribute just a new version of the class or interface that contains the definition of the flag.\n\nSo, this statement makes clear that this form of conditional compilation matches the intent of the language designers and that compilers are entitled to omit the code in question (all relevant compilers do). In principle, a compiler is not required to omit the code, but since it must not generate a reference to the field GVar.runInDebugMode in the compiled code, the code can\u2019t contain a real conditional. If the code is not omitted, it must be skipped in a de-facto unconditional way. Either, by a goto instruction or, when compiling in the most na\u00efve way imaginable, by literally testing false, iconst_0; ifeq \u2026. Both approaches would be on the nanosecond scale in interpreted execution mode and no challenge to the JIT compiler/ optimizer at all.\n\nIt\u2019s worth mentioning that static final fields are trusted fields which are normally not even changeable by Reflection. This is used, e.g. by the Assertion feature, as under the hood, a class containing an assert statement will have a static final boolean field initialized at class initialization time (so it\u2019s not a compile-time constant) and each assert statement will skip its check conditionally, depending on the state of the static final variable. It was as early as at Java\u00a01.4 time, when it was concluded that the necessary dead code elimination is commonplace in JVMs, to rely on it in this way.\nSo even if you turn your debug flag from compile-time constant to an initialization-time constant, the impact on the performance would be hardly noticeable. But the way you\u2019re using it now, the code is removed at compile-time already and doesn\u2019t rely on the JVM anyway.\n"
}
{
    "Id": 72089617,
    "PostTypeId": 1,
    "Title": "How to write a method that takes in a List of Integer, Float, Double and calculate the average?",
    "Body": "I am trying to write a method that takes in a list of numeric values - eg List, List, List etc - and give me the average.\npublic double getAverage(List stats) {\n    double sum = 0.00;\n    if(!stats.isEmpty()) {\n        // sum = stats.stream()\n        //            .reduce(0, (a, b) -> a + b);\n        // return sum / stats.size();\n    }\n}\n\nThese are the errors I get:\n\nOperator '+' cannot be applied to 'capture', 'capture'\n\n",
    "AcceptedAnswerId": 72089958,
    "AcceptedAnswer": "\nOptionalDouble average()\nWhere, OptionalDouble is a container object  which may or may not\ncontain a double value.\n\n  public class Test {\n\n    public static OptionalDouble getAverage(List stats) {\n        return stats.\n                stream().\n                 mapToDouble(d -> d.doubleValue()).\n                    average();\n            \n    }\n    \n    public static void main(String[] args) throws IOException {\n\n        List list = Arrays.asList(1, 4, 5, 67, 3);\n        if(getAverage(list).isPresent());\n        {\n            Double average = getAverage(list).getAsDouble();\n            System.out.println(average);\n        }\n        \n    }\n}\n\nor\nUsing Goolge Guava\n Double averge = Stats.meanOf(list);\n\n      \n\nit gets syntactically simplified\n"
}
{
    "Id": 74356407,
    "PostTypeId": 1,
    "Title": "How to get the date and time in format 2022-10-03T19:45:47.844Z in Java",
    "Body": "I need the current system date and time in 2022-10-03T19:45:47.844Z format in a java class.\nI tried using the zoneddatetime and simple date format but couldn't get the write syntax or code from online. I'm beginner in Java, any help is appreciated.\nThanks.\n",
    "AcceptedAnswerId": 74356572,
    "AcceptedAnswer": "I hope this solves your problem:\nimport java.time.ZoneId;\nimport java.time.ZonedDateTime;\nimport java.time.format.DateTimeFormatter;\n\npublic class Main {\n    public static void main(String[] args) {\n        ZonedDateTime zdt = ZonedDateTime.now(ZoneId.of(\"UTC\"));\n        DateTimeFormatter formatter =\n                DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n        System.out.println(zdt.format(formatter));\n    }\n}\n\n"
}
